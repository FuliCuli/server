---

- name: Install mariadb addons
  apt: pkg=software-properties-common state=latest
  tags:
    - mariadb

- name: Add mariadb key
  apt_key: url=http://keyserver.ubuntu.com/pks/lookup?op=get&search=0xcbcb082a1bb943db
  tags:
    - mariadb

- name: Add mariadb repository
  apt_repository: repo='deb http://mirror.timeweb.ru/mariadb/repo/10.0/ubuntu precise main' update_cache=yes
  tags:
    - mariadb

- name: Install required packages
  apt: pkg={{ item }} state=latest update_cache=yes
  with_items:
    - mariadb-server
    - mariadb-client
    - python-mysqldb
  tags:
    - mariadb

- name: Start mariadb service
  service: name=mysql state=started enabled=true
  tags:
    - mariadb

- name: Create a root password
  shell: echo $(pwgen -Bs 20 1)
  register: mariadb_root_password
  tags:
    - mariadb

- name: Update mysql root password for all root accounts
  mysql_user: name=root host={{ item }} password={{ mariadb_root_password.stdout }} priv=*.*:ALL,GRANT
  with_items:
    - $ansible_hostname
    - 127.0.0.1
    - ::1
    - localhost
  tags:
    - mariadb
  when: mariadb_root_password.stdout|length > 0

- name: Copy .my.cnf file with root password credentials
  template: src=.my.cnf.j2 dest=/root/.my.cnf owner=root mode=0600
  tags:
    - mariadb
  when: mariadb_root_password.stdout|length > 0

- name: Ensure anonymous users are not in the database
  mysql_user: name='' host={{ item }} state=absent
  with_items:
    - $ansible_hostname
    - localhost
  tags: 
    - mariadb

- name: Ensure test database is removed
  mysql_db: name=test state=absent
  tags:
    - mariadb

- name: Configure mariadb
  template: src=fuliculi.cnf.j2 dest=/etc/my.cnf.d/fuliculi.cnf
  tags: db
  notify: restart mariadb

- name: insert iptables rule
  lineinfile: "dest=/etc/iptables.rules state=present regexp='{{ db_port }}' insertafter='# CUSTOM RULES HERE' line='-A INPUT -p tcp --dport {{ db_port }} -j ACCEPT'"
  when: db_open_port
  notify: restart firewall
  tags:
    - mariadb
    - firewall

- name: mariadb iptables rule close port
  lineinfile: dest=/etc/iptables.rules state=absent regexp='{{ db_port }}' insertafter='# CUSTOM RULES HERE'
  when: db_open_port != true
  notify: restart firewall
  tags:
    - mariadb
    - firewall