server {
    server_name  www.{{ website.domain }};
    rewrite ^(.*) http://{{ website.domain }}$1 permanent;
}

server {
{% if website.ssl is defined %}
        listen 443 ssl;
        keepalive_timeout   {{ website.ssl.timeout | default(70) }};
        ssl_certificate      {{ website.ssl.cert }};
        ssl_certificate_key  {{ website.ssl.key }};
        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers   on;
{% else %}
        listen 80;
{% endif %}

        server_name {{ website.domain }};

        set $version 'release';
        if ($http_x_version) {
            set $version $http_x_version;
        }

        root   /var/www/{{ website.domain }}/$version/{{ website_webdir }};
        index {% if type == 'symfony' %}{% if env == 'dev' %}app_dev.php{% else %}app.php{% endif %}{% else %}index.php{% endif %};

        # Logging
        {% if env != 'prod' %}
        access_log  /var/log/nginx/{{ website.domain }}.access.log;
        error_log  /var/log/nginx/{{ website.domain }}.error.log debug;
        {% else %}
        access_log  /var/log/nginx/access.log;
        error_log  /var/log/nginx/error.log warn;
        {% endif %}

        # serve static files directly
        location ~* ^.+.(jpg|jpeg|gif|css|png|js|ico|html|xml|txt)$ {
            {% if env == 'prod' %}
            access_log        off;
            expires           max;
            {% endif %}
        }

        location / {
            if ($request_method = OPTIONS ) {
                add_header Access-Control-Allow-Origin "http{% if website.ssl is defined %}s{% endif %}://{{ website.domain }}";
                add_header Access-Control-Allow-Methods "POST, PUT, PATCH, GET, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "origin, x-requested-with, content-type, accept, authorization";
                add_header Access-Control-Allow-Credentials "true";
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 200;
            }
        }
 
        location ~ \.php$ {
                try_files $uri =404;
                include /etc/nginx/fastcgi_params;

                fastcgi_pass unix:/var/run/{{ website.domain }}.sock;
                fastcgi_index {% if type == 'symfony' %}{% if env == 'dev' %}app_dev.php{% else %}app.php{% endif %}{% else %}index.php{% endif %};
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        }

        location ~ /\.  { return 403; }
}
