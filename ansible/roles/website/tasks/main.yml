---

- name: Add nginx host files
  template: src=nginx.conf.j2 dest=/etc/nginx/conf.d/{{ item.domain }}.conf owner=root mode=644
  with_items: websites
  when: domain is not defined or domain == item.domain
  notify: restart nginx
  tags:
    - website

- name: Add php-fpm pool files
  template: src=php-fpm.conf.j2 dest=/etc/php5/fpm/pool.d/{{ item.domain }}.conf owner=root mode=644
  with_items: websites
  when: domain is not defined or domain == item.domain
  notify: restart php-fpm
  tags:
    - website

- name: Check if site folder exists
  stat: path=/var/www/{{ item.domain }}
  register: check_path

- name: It doesn't so we create it
  shell: mkdir /var/www/{{ item.domain }}
  when: check_path.stat.exists == false

- name: Clone repositories
  git: repo={{ item.git }} dest=/var/www/{{ item.domain }}/{{ item.version | default('master') }} version={{ item.version | default('master') }} update=yes accept_hostkey=yes
  with_items: websites
  when: item.git is defined and (domain is not defined or domain == item.domain)
  tags:
    - website
    - deploy

- name: Launch composer dependencies
  shell: cd /var/www/{{ item.domain }}/{{ item.version | default('master') }} && [ -e "composer.json" ] && composer install -o -q || echo "No dependencies found."
  with_items: websites
  when: domain is not defined or domain == item.domain
  sudo: yes
  tags:
    - website
    - deploy

- name: Install npm dependencies
  shell: cd /var/www/{{ item.domain }}/{{ item.version | default('master') }} && [ -e "package.json" ] && npm install -o || echo "No dependencies found."
  with_items: websites
  when: domain is not defined or domain == item.domain
  tags:
    - website
    - deploy

- name: Install bower dependencies
  shell: cd /var/www/{{ item.domain }}/{{ item.version | default('master') }} && [ -e "bower.json" ] && bower install --allow-root ./ || echo "No dependencies found."
  with_items: websites
  when: domain is not defined or domain == item.domain
  tags:
    - website
    - deploy

- name: Execute grunt files
  shell: cd /var/www/{{ item.domain }}/{{ item.version | default('master') }} && [ -e "Gruntfile.json" ] && LANG=en_US.UTF-8 grunt -o || echo "No grunt file found."
  with_items: websites
  when: domain is not defined or domain == item.domain
  tags:
    - website
    - deploy

- include: symfony.yml
  tags:
    - website
    - deploy
    - symfony

- name: Create version file
  template: src=version.txt.j2 dest=/var/www/{{ item.domain }}/{{ item.version | default('master') }}/{{ item.web_dir | default('web') }}/version.txt
  with_items: websites
  tags:
    - website
    - deploy

- set_fact: user="www-data"
  when: env != 'dev'
  tags:
    - website
    - deploy

- set_fact: user="vagrant"
  when: env == 'dev'
  tags:
    - website
    - deploy

- name: Apply good rights
  shell: cd /var/www/{{ item.domain }} && chmod -R 775 {{ item.version | default('master') }}/ && chown -R {{ user }}:www-data {{ item.version | default('master') }}/
  with_items: websites
  when: env == 'dev' and (domain is not defined or domain == item.domain)
  tags:
    - website
    - deploy

- name: Change release folder
  file: src=/var/www/{{ item.domain }}/{{ item.version | default('master') }} dest=/var/www/{{ item.domain }}/release owner={{ user }} group=www-data state=link
  with_items: websites
  when: env == 'dev' and (domain is not defined or domain == item.domain)
  notify: restart php-fpm
  tags:
    - website
    - deploy
